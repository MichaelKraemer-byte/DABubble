@import '../../../../mixin.scss';

mat-icon{
    @include materialSymbols()
}

.dialogWindow{
    @include nunito(400, 24px, black);
    @include dFlex(center, start);
    flex-direction: column;
    gap: 20px;
    @include padding(40px, 40px, 40px, 40px);
    width: 560px;
    @include respond-to-maxWidth('smallMedium'){
        @include padding(32px, 16px, 32px, 16px);
        width: 100%;
        height: 100%;
        @include dFlex(space-between, start);
    }
}

.optionContainer{
    @include dFlex(center, start);
    flex-direction: column;
    font-size: 24px;
    gap: 20px;
}

h3{
    @include nunito(700, 24px, black);
    @include respond-to-maxWidth('smallMedium'){
        margin-bottom: 20px;
        margin-top: 20px;
    }
}

.closeIcon{
    @include matIcon(24px, 8px 8px, black, $chover: var(--purple-1), $scale: 1.1);
    position: absolute;
    top: 40px;
    right: 40px;
    border-radius: 50px;
    @include dFlex(center, center);
    transition: background-color 0.100s ease-in-out, color 0.100s ease-in-out, transform 0.100s ease-in-out;
    &:hover {
        background-color: var(--dg-btn-bg);
    }
    @include respond-to-maxWidth('smallMedium'){
        right: 16px;
    }
}

.buttonContainer{
    width: 100%;
    @include dFlex(end, center)
}

mat-form-field {
    // @include padding(18px, 20px, 18px, 20px);
    border: 1px solid var(--border-light-purple);
    transition: border ease-in-out 0.3s;
    outline: none;
    border-radius: 40px;
    @include nunito(400, 18px, black);
    &:focus{
        border: 1.6px solid var(--purple-1);
    }
    &:focus-within {
        border: 1.6px solid var(--purple-1);
    }
    &:hover{
        border: 1.6px solid var(--purple-1);
    }
    resize: none; 
    scrollbar-width: none;    
    line-height: 24px; 
    min-height: calc(24px * 1 + 36px); 
    max-height: calc(24px * 3 + 36px);
    @include nunito(400, 18px, black);
    width: 100%;
    @include respond-to-maxWidth('smallMedium'){
        margin-top: 20px;
        width: 100%;
        max-height: 240px;
    }
}

form {
    width: 100%;
    &:hover{
        background-color: transparent !important;
    }
}

::ng-deep mat-form-field{
    width: 100%;
    background-color: transparent;
    &:hover{
        background-color: transparent !important;
    }
}

::ng-deep .mdc-text-field--filled, ::ng-deep .mdc-text-field, ::ng-deep .mat-mdc-form-field-focus-overlay, ::ng-deep .mdc-line-ripple::before,  ::ng-deep .mdc-line-ripple::after{
    background-color: transparent !important;
    border: 0px solid white !important;
    &:hover{
        background-color: transparent !important;
    }
    &:focus{
        border: 0px solid white !important;
    }
}

::ng-deep div.mat-mdc-autocomplete-panel {
    background-color: white !important;
}

// Manipulate initial background color
.mdc-text-field--filled:not(.mdc-text-field--disabled) {
    background-color: transparent;
  }
  
  // Manipulate background color on hover and focus
  .mat-mdc-form-field-focus-overlay {
    background-color: transparent;
}

::ng-deep .mdc-text-field--no-label:not(.mdc-text-field--textarea) .mat-mdc-form-field-input-control.mdc-text-field__input, 
::ng-deep .mat-mdc-text-field-wrapper .mat-mdc-form-field-input-control,
::ng-deep .mat-mdc-option .mdc-list-item__primary-text {
    @include nunito(400, 18px, black);
}

.button{
    background-color: #444DF2 !important;
    @include nunito(400, 18px, --text-black);
    @include padding(12px, 25px, 12px, 25px);
    @include dFlex(center, center);
    width: fit-content;
}

.contactPicture{
    width: 50px;
    height: 50px;
    border-radius: 50px;
    object-fit: cover;
}

.contactPictureContainer,
.pictureInChipContainer {
    position: relative;
    @include dFlex(start, center)
}

.onlineStatus {
    position: absolute;
    right: 0px;
    bottom: 6px;
}

.contact, 
.contactAsChip {
    transition: background-color 0.125s ease-in-out;
    border-radius: 20px;
    @include dFlex(start, center);
    gap: 16px;
    @include padding (4px, 20px, 4px, 20px);
    width: fit-content;
    @include nunito (400, 18px, black);

    &:hover {
        background-color: #ECEEFE;
        cursor: pointer;
    }
}

.mat-mdc-option,  .mdc-list-item{
    background-color: white !important;
    &:hover{
        .mdc-list-item__primary-text{
            cursor: pointer !important;
            .contact {
                background-color: #ECEEFE !important;
            }  
        }
    }
}

.mat-mdc-option-active {
    .contact {
        background-color: #ECEEFE !important;
    }  
}

::ng-deep .cdk-overlay-pane:not(.mat-mdc-autocomplete-panel-above) div.mat-mdc-autocomplete-panel {
    border-radius: 30px !important;
    border-top-left-radius: 0px !important;
    &::-webkit-scrollbar {
        width: 0px; 
    }
    &::-webkit-scrollbar-track {
        background-color: transparent; 
    }
}

::ng-deep  .mat-mdc-standard-chip .mdc-evolution-chip__action--primary::before {
    border-width: 0px !important;
    border-radius: 0px !important;
    padding: 0px;
    content: unset;
    height: 100%;
    left: 0;
    position: absolute;
    pointer-events: none;
    top: 0;
    width: fit-content;
    z-index: 1;
    border-style: solid;
    border: 0px solid white;
    &:hover{
        background-color: transparent;
    }
}

::ng-deep .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{
    padding: 0px !important;
}

.contactAsChip{
    gap: 8px;
    @include padding (4px, 8px, 4px, 8px);
    @include nunito (400, 18px, black);
    background-color: #ECEEFE;
    height: 48px;
    &:hover {
        background-color: var(--purple-2);
        cursor: pointer;
    }
}

.contactPictureInChip{
    width: 32px !important;
    height: 32px !important;
    border-radius: 50px;
    object-fit: cover;
}

::ng-deep .mat-mdc-form-field-subscript-wrapper{
    display: none;
}

::ng-deep .mat-mdc-text-field-wrapper{
    overflow: auto !important;
    scrollbar-width: none;
}

::ng-deep .mdc-evolution-chip-set__chips{
    row-gap: 12px;
}


::ng-deep .mat-mdc-dialog-surface{
    @include respond-to-maxWidth('smallMedium'){
        border-radius: 0 !important;  /* Entfernt die abgerundeten Ecken */
    };
}

.buttonAndProgressBarContainer{
    @include dFlex(center, space-between);
    width: 100%;
    flex-direction: column;
    gap: 16px;
}

input {
    @include respond-to-maxWidth('smallMedium'){
        margin-top: 20px;
    }
}

.width-100 {
    width: 100%;
}